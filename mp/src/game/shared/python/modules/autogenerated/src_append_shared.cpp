//=============================================================================//
// This file is automatically generated. CHANGES WILL BE LOST.
//=============================================================================//
#include "cbase.h"
#include "srcpy.h"

// memdbgon must be the last include file in a .cpp file!!!
#include "tier0/memdbgon.h"

using namespace boost::python;

// The init method is in one of the generated files declared
#ifdef _WIN32
extern "C" __declspec(dllexport) PyObject* PyInit_srcbuiltins();
extern "C" __declspec(dllexport) PyObject* PyInit__vmath();
extern "C" __declspec(dllexport) PyObject* PyInit__animation();
extern "C" __declspec(dllexport) PyObject* PyInit__entities();
extern "C" __declspec(dllexport) PyObject* PyInit__entitiesmisc();
extern "C" __declspec(dllexport) PyObject* PyInit__gameinterface();
extern "C" __declspec(dllexport) PyObject* PyInit__utils();
extern "C" __declspec(dllexport) PyObject* PyInit__physics();
extern "C" __declspec(dllexport) PyObject* PyInit__sound();
extern "C" __declspec(dllexport) PyObject* PyInit__particles();
extern "C" __declspec(dllexport) PyObject* PyInit__ndebugoverlay();
extern "C" __declspec(dllexport) PyObject* PyInit_vprof();
#else
extern "C"  PyObject* PyInit_srcbuiltins();
extern "C"  PyObject* PyInit__vmath();
extern "C"  PyObject* PyInit__animation();
extern "C"  PyObject* PyInit__entities();
extern "C"  PyObject* PyInit__entitiesmisc();
extern "C"  PyObject* PyInit__gameinterface();
extern "C"  PyObject* PyInit__utils();
extern "C"  PyObject* PyInit__physics();
extern "C"  PyObject* PyInit__sound();
extern "C"  PyObject* PyInit__particles();
extern "C"  PyObject* PyInit__ndebugoverlay();
extern "C"  PyObject* PyInit_vprof();
#endif // _WIN32

// The append function
void AppendSharedModules()
{
	APPEND_MODULE(srcbuiltins)
	APPEND_MODULE(_vmath)
	APPEND_MODULE(_animation)
	APPEND_MODULE(_entities)
	APPEND_MODULE(_entitiesmisc)
	APPEND_MODULE(_gameinterface)
	APPEND_MODULE(_utils)
	APPEND_MODULE(_physics)
	APPEND_MODULE(_sound)
	APPEND_MODULE(_particles)
	APPEND_MODULE(_ndebugoverlay)
	APPEND_MODULE(vprof)
}
