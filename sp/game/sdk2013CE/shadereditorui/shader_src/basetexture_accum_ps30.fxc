// ********************************
// ** auto generated pixelshader **
// ********************************

#define SHADER_EDITOR_2013_COMPILE


// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Samplers
sampler _Sampler_00		: register( s0 );
sampler _Sampler_01		: register( s1 );

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float4 _texLookup_3 = tex2D( _Sampler_00, In.vTexCoord_0 );
	float3 _var0 = _texLookup_3.rgb;
	float _var1 = _texLookup_3.a;
	float4 _texLookup_5 = tex2D( _Sampler_01, In.vTexCoord_0 );
	float3 _var2 = _texLookup_5.rgb;
	float _var3 = _texLookup_5.a;
	_var0 = lerp( _var0, _var2, float( 0.800000 ) );
	_var1 = lerp( _var1, _var3, float( 0.400000 ) );
	float4 _var4 = float4( _var0, _var1 );
	Out.vColor_0 = _var4;
	return Out;
}