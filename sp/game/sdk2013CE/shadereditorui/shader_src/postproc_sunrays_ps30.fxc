// ********************************
// ** auto generated pixelshader **
// ********************************

// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"


// Combos

// Samplers
sampler _Sampler_00		: register( s0 );
sampler _Sampler_01		: register( s1 );

// Constants
const float4 g_cData_sun_data		: register( c0 ); 		// Callback

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float4 _texLookup_9 = tex2D( _Sampler_00, In.vTexCoord_0 );
	float3 _var0 = _texLookup_9.rgb;
	float _var1 = _texLookup_9.a;
	float3 _var2 = float3( 0.000000, 0.000000, 0.000000 );
	float2 _var3 = In.vTexCoord_0;
	float2 _var4 = g_cData_sun_data.xy;
	float _var5 = float( 1.000000 );
	float _var6 = g_cData_sun_data.z;
	_var4 = In.vTexCoord_0 - _var4;
	_var6 = saturate( _var6 );
	float _var7 = length( _var4 );
	float2 _var8 = _var4 / _var7;
	float _var9 = smoothstep( float( 0.000000 ), float( 0.700000 ), _var7 );
	_var8 = _var8 * _var9;
	_var8 = _var8 * float( 0.010000 );
	for ( int _var10 = 0; _var10 < 35; _var10++ )
	{
		float2 _var11 = _var8;
		_var5 = _var5 * float( 0.960000 );
		_var3 = _var3 - _var11;
		float4 _texLookup_28 = tex2D( _Sampler_01, _var3 );
		float3 _var12 = _texLookup_28.rgb;
		float _var13 = _texLookup_28.a;
		_var12 = _var12 * _var13;
		_var12 = _var12 * _var5;
		_var2 = _var2 + _var12;
	}
	_var2 = _var2 * float( 0.050000 );
	_var2 = _var2 * _var6;
	_var0 = _var0 + _var2;
	float4 _var14 = float4( _var0, _var1 );
	Out.vColor_0 = _var14;
	return Out;
}