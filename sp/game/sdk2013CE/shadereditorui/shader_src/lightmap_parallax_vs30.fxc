// *********************************
// ** auto generated vertexshader **
// *********************************


// Includes
#include "common_vs_fxc.h"


// Constants
const float g_cData_parallax_geo_height		: register( c48 ); 		// Static

// Semantic structures
struct VS_INPUT
{
	float3 vPos					:	POSITION;
	float3 vNormal				:	NORMAL;
	float3 vTangent_S			:	TANGENT;
	float3 vTangent_T			:	BINORMAL;
	float2 vTexCoord_0			:	TEXCOORD0;
	float2 vTexCoord_1			:	TEXCOORD1;
	float2 vTexCoord_2			:	TEXCOORD2;
};

struct VS_OUTPUT
{
	float4 vProjPos				:	POSITION;
	float2 vTexCoord_0			:	TEXCOORD0;
	float4 vTexCoord_1			:	TEXCOORD1;
	float3 vTexCoord_2			:	TEXCOORD2;
	float3 vTexCoord_3			:	TEXCOORD3;
	float2 vTexCoord_4			:	TEXCOORD4;
	float3 vTexCoord_5			:	TEXCOORD5;
	float3 vTexCoord_6			:	TEXCOORD6;
};

// Entry point
VS_OUTPUT main( const VS_INPUT In )
{
	VS_OUTPUT Out;
	float3 _var0 = mul( float4(In.vPos.xyz,1), cModel[0] );
	float3 _var1 = mul( float4(In.vNormal.xyz,1), cModel[0] );
	float2 _var2 = In.vTexCoord_1 + In.vTexCoord_2;
	float3 _var3 = mul( float4(In.vTangent_S.xyz,1), cModel[0] );
	float3 _var4 = mul( float4(In.vTangent_T.xyz,1), cModel[0] );
	_var1 = normalize( _var1 );
	float2 _var5 = _var2 + In.vTexCoord_2;
	_var3 = normalize( _var3 );
	_var4 = normalize( _var4 );
	float3 _var6 = _var1 * g_cData_parallax_geo_height;
	float4 _var7 = float4( _var2, _var5 );
	float2 _var8 = _var5 + In.vTexCoord_2;
	_var0 = _var0 + _var6;
	float4 _var9 = mul( float4(_var0.xyz,1), cViewProj );
	Out.vProjPos = _var9;
	Out.vTexCoord_0 = In.vTexCoord_0;
	Out.vTexCoord_1 = _var7;
	Out.vTexCoord_2 = _var1;
	Out.vTexCoord_3 = _var0;
	Out.vTexCoord_4 = _var8;
	Out.vTexCoord_5 = _var3;
	Out.vTexCoord_6 = _var4;
	return Out;
}