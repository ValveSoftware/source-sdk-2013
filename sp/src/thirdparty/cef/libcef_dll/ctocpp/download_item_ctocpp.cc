// Copyright (c) 2016 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/ctocpp/download_item_ctocpp.h"


// VIRTUAL METHODS - Body may be edited by hand.

bool CefDownloadItemCToCpp::IsValid() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, is_valid))
    return false;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_valid(_struct);

  // Return type: bool
  return _retval?true:false;
}

bool CefDownloadItemCToCpp::IsInProgress() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, is_in_progress))
    return false;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_in_progress(_struct);

  // Return type: bool
  return _retval?true:false;
}

bool CefDownloadItemCToCpp::IsComplete() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, is_complete))
    return false;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_complete(_struct);

  // Return type: bool
  return _retval?true:false;
}

bool CefDownloadItemCToCpp::IsCanceled() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, is_canceled))
    return false;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_canceled(_struct);

  // Return type: bool
  return _retval?true:false;
}

int64 CefDownloadItemCToCpp::GetCurrentSpeed() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_current_speed))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int64 _retval = _struct->get_current_speed(_struct);

  // Return type: simple
  return _retval;
}

int CefDownloadItemCToCpp::GetPercentComplete() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_percent_complete))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->get_percent_complete(_struct);

  // Return type: simple
  return _retval;
}

int64 CefDownloadItemCToCpp::GetTotalBytes() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_total_bytes))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int64 _retval = _struct->get_total_bytes(_struct);

  // Return type: simple
  return _retval;
}

int64 CefDownloadItemCToCpp::GetReceivedBytes() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_received_bytes))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int64 _retval = _struct->get_received_bytes(_struct);

  // Return type: simple
  return _retval;
}

CefTime CefDownloadItemCToCpp::GetStartTime() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_start_time))
    return CefTime();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_time_t _retval = _struct->get_start_time(_struct);

  // Return type: simple
  return _retval;
}

CefTime CefDownloadItemCToCpp::GetEndTime() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_end_time))
    return CefTime();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_time_t _retval = _struct->get_end_time(_struct);

  // Return type: simple
  return _retval;
}

CefString CefDownloadItemCToCpp::GetFullPath() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_full_path))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = _struct->get_full_path(_struct);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

uint32 CefDownloadItemCToCpp::GetId() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_id))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  uint32 _retval = _struct->get_id(_struct);

  // Return type: simple
  return _retval;
}

CefString CefDownloadItemCToCpp::GetURL() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_url))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = _struct->get_url(_struct);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

CefString CefDownloadItemCToCpp::GetOriginalUrl() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_original_url))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = _struct->get_original_url(_struct);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

CefString CefDownloadItemCToCpp::GetSuggestedFileName() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_suggested_file_name))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = _struct->get_suggested_file_name(_struct);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

CefString CefDownloadItemCToCpp::GetContentDisposition() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_content_disposition))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = _struct->get_content_disposition(_struct);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

CefString CefDownloadItemCToCpp::GetMimeType() {
  cef_download_item_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, get_mime_type))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = _struct->get_mime_type(_struct);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}


// CONSTRUCTOR - Do not edit by hand.

CefDownloadItemCToCpp::CefDownloadItemCToCpp() {
}

template<> cef_download_item_t* CefCToCpp<CefDownloadItemCToCpp,
    CefDownloadItem, cef_download_item_t>::UnwrapDerived(CefWrapperType type,
    CefDownloadItem* c) {
  NOTREACHED() << "Unexpected class type: " << type;
  return NULL;
}

#if DCHECK_IS_ON()
template<> base::AtomicRefCount CefCToCpp<CefDownloadItemCToCpp,
    CefDownloadItem, cef_download_item_t>::DebugObjCt = 0;
#endif

template<> CefWrapperType CefCToCpp<CefDownloadItemCToCpp, CefDownloadItem,
    cef_download_item_t>::kWrapperType = WT_DOWNLOAD_ITEM;
